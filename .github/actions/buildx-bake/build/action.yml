name: "Build & Push Images"
description: "Download metadata, build multi‑arch images, push by digest, and upload per‑platform digests."
inputs:
  bake-target:
    description: 'Target name for `docker buildx bake`'
    required: false
    type: string
    default: 'build'
  registry:
    description: 'The container registry'
    required: false
    default: 'ghcr.io'
  registry-username:
    description: 'The container registry username'
    required: true
    default: ${{ github.actor }}
  registry-password:
    description: 'The container registry password'
    required: true
  registry-image:
    description: 'Container registry + image prefix'
    required: false
    type: string
runs:
  using: "composite"
  steps:
    - name: Prepare env
      shell: bash
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Download meta bake file
      uses: actions/download-artifact@v4
      with:
        name: bake-meta
        path: ${{ runner.temp }}

    - name: Login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build & push images
      id: bake
      uses: docker/bake-action@v6
      env:
        NO_TAG: true
      with:
        files: |
          ./docker-bake.hcl
          cwd://${{ runner.temp }}/bake-meta.json
        targets: ${{ inputs.bake-target }}
        set: |
          ${{ inputs.registry-image != '' && format('*.tags={0}', inputs.registry-image) || '' }}
          *.platform=${{ matrix.platform }}
          *.output=type=image,push-by-digest=true,name-canonical=true,push=true

    - name: Export container digests
      shell: bash
      run: |
        mkdir -p ${{ runner.temp }}/digests
        echo '${{ steps.bake.outputs.metadata }}' | jq 'with_entries(select(.value["containerimage.digest"]?) | .value |= {name: .["image.name"], digests:[.["containerimage.digest"]]})' > ${{ runner.temp }}/digests/${{ env.PLATFORM_PAIR }}.json

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1
