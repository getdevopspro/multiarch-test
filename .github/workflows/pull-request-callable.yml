name: Pull Request Build

on:
  workflow_call:
    secrets:
      registry-password:
        description: 'Password or token for registry login'
        required: true
    inputs:
      previous-version:
        description: 'The strategy to detect the previous version: auto, from-tag, from-file or manual'
        required: false
        default: 'auto'
        type: string
      next-version:
        description: 'The strategy to calculate the next version: auto, semantic, from-file, increment or manual'
        required: false
        default: 'auto'
        type: string
      output-format:
        description: 'The output format of the next version'
        required: false
        default: '{{.Major}}.{{.Minor}}.{{.Patch}}-pull-request'
        type: string
      version-file:
        description: 'Set version in file named as input'
        required: false
        type: string
      version-makefile:
        description: 'Set version in makefile named as input'
        required: false
        type: string
      version-justfile:
        description: 'Set version in justfile named as input'
        required: false
        type: string
      version-package:
        description: 'Set version in package json named as input'
        required: false
        type: string
      version-package-lock:
        description: 'Set version in package lock named as input'
        required: false
        type: string
      version-script:
        description: 'Set version in script named as input'
        required: false
        type: string
      version-chart:
        description: 'Set version in chart named as input'
        required: false
        type: string
      registry-image:
        description: 'Container registry + image prefix (e.g. ghcr.io/org/repo)'
        required: false
        type: string
      bake-target:
        description: 'Target name for `docker buildx bake`'
        required: false
        type: string
        default: 'build'
      meta-tags:
        description: 'The tags to add to the image'
        required: false
        type: string
      meta-labels:
        description: 'The labels to add to the image'
        required: false
        type: string
      registry-username:
        description: 'Username for registry login'
        required: true
        type: string
      runner-arm64:
        description: 'Runner label for ARM64 jobs'
        required: false
        type: string
        default: 'ubuntu-22.04-arm'
      runner-default:
        description: 'Runner label for nonâ€‘ARM jobs'
        required: false
        type: string
        default: 'ubuntu-22.04'
      registry:
        description: 'Docker registry domain'
        required: false
        type: string
        default: 'ghcr.io'
      free-disk-space:
        description: 'Free disk space before build'
        required: false
        default: false
        type: boolean
      version-command:
        description: 'The command to run for setting the version'
        required: false
        type: string
      prepare-command:
        description: 'The command to run for preparing the build'
        required: false
        type: string
      lint-command:
        description: 'The command to run for linting'
        required: false
        type: string
      checks-command:
        description: 'The command to run for checks'
        required: false
        type: string
      just-install:
        description: 'Install just'
        required: false
        default: false
        type: boolean
      just-version:
        description: 'The version of just to install'
        required: false
        default: '1.35.0'
        type: string

permissions:
  contents: read
  packages: write

jobs:
  version:
    name: Versioning
    runs-on: ${{ inputs.runner-default }}
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Next release version
        id: release_version
        uses: getdevopspro/github-actions/release-version@v0.3.0-prerelease
        with:
          previous-version: ${{ inputs.previous-version }}
          next-version: ${{ inputs.next-version }}
          output-format: ${{ inputs.output-format }}

      - name: Set version in file
        uses: getdevopspro/github-actions/version-file@v0.3.0-prerelease
        with:
          version: ${{ steps.release_version.outputs.version }}
          version-makefile: ${{ inputs.version-makefile }}
          version-justfile: ${{ inputs.version-justfile }}
          version-package: ${{ inputs.version-package }}
          version-package-lock: ${{ inputs.version-package-lock }}
          version-script: ${{ inputs.version-script }}
          version-chart: ${{ inputs.version-chart }}

      - name: Install just
        if: inputs.just-install
        uses: extractions/setup-just@v2
        with:
          just-version: ${{ inputs.just-version }}

      - name: Run version command
        if: inputs.version-command != ''
        id: version_command
        shell: bash
        run: ${{ inputs.version-command }}

      - name: Upload updated source
        uses: actions/upload-artifact@v4
        with:
          name: updated-source
          path: .
          overwrite: true
          if-no-files-found: error
          retention-days: 1
          include-hidden-files: true

  pre-build-commands:
    name: Pre-Build Steps
    needs: version
    runs-on: ${{ inputs.runner-default }}
    strategy:
      matrix:
        pre-steps:
          - command: lint
            if: ${{ inputs.lint-command != '' }}
          - command: checks
            if: ${{ inputs.checks-command != '' }}
    steps:
      - name: Download updated source
        uses: actions/download-artifact@v4
        with:
          name: updated-source

      - name: Install just
        if: inputs.just-install
        uses: extractions/setup-just@v2
        with:
          just-version: ${{ inputs.just-version }}

      - name: Run lint command
        if: inputs.lint-command != '' && matrix.pre-steps.command == 'lint'
        id: lint_command
        shell: bash
        run: ${{ inputs.lint-command }}

      - name: Run checks command
        if: inputs.checks-command != '' && matrix.pre-steps.command == 'checks'
        id: checks_command
        shell: bash
        run: ${{ inputs.checks-command }}

      - name: Upload updated source
        uses: actions/upload-artifact@v4
        with:
          name: updated-source
          path: .
          overwrite: true
          if-no-files-found: error
          retention-days: 1
          include-hidden-files: true

  image-prepare:
    name: Prepare Image Build
    needs: pre-build-commands
    runs-on: ${{ inputs.runner-default }}
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - name: Download updated source
        uses: actions/download-artifact@v4
        with:
          name: updated-source

      - name: Install just
        if: inputs.just-install
        uses: extractions/setup-just@v2
        with:
          just-version: ${{ inputs.just-version }}

      - name: Run prepare command
        if: inputs.prepare-command != ''
        id: prepare_command
        shell: bash
        run: ${{ inputs.prepare-command }}

      - name: Prepare matrix & metadata
        id: prepare
        uses: ./.github/actions/buildx-bake/prepare
        with:
          bake-target: ${{ inputs.bake-target }}
          registry-image: ${{ inputs.registry-image }}
          meta-labels:
            ${{ inputs.meta-labels }}
          meta-tags: |
            type=edge,branch=$repo.default_branch,event=push
            type=sha,event=push
            type=ref,event=branch
            type=ref,event=pr
            ${{ inputs.meta-tags }}

      - name: Upload updated source
        uses: actions/upload-artifact@v4
        with:
          name: updated-source
          path: .
          overwrite: true
          if-no-files-found: error
          retention-days: 1
          include-hidden-files: true

  image-build:
    name: Build Image
    needs: image-prepare
    runs-on: ${{ matrix.platform == 'linux/arm64' && inputs.runner-arm64 || inputs.runner-default }}
    strategy:
      matrix:
        platform: ${{ fromJson(needs.image-prepare.outputs.matrix) }}
    steps:
      - name: Download updated source
        uses: actions/download-artifact@v4
        with:
          name: updated-source

      - uses: ./.github/actions/buildx-bake/build
        with:
          bake-target: ${{ inputs.bake-target }}
          registry: ${{ inputs.registry }}
          registry-image: ${{ inputs.registry-image }}
          registry-username: ${{ inputs.registry-username }}
          registry-password: ${{ secrets.registry-password }}
          free-disk-space: ${{ inputs.free-disk-space }}

  image-merge:
    name: Push Image
    needs: image-build
    runs-on: ${{ inputs.runner-default }}
    steps:
      - name: Download updated source
        uses: actions/download-artifact@v4
        with:
          name: updated-source

      - uses: ./.github/actions/buildx-bake/merge
        with:
          registry-username: ${{ inputs.registry-username }}
          registry-password: ${{ secrets.registry-password }}
